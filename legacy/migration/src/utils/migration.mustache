const fs = require('fs');
const mustache = require('mustache');
const path = require('path');

const migrationFileTemplate =
`const { thinky } = require('../config');

module.exports = {
  up: () => {
    return Promise.resolve();
  },
  down: () => {
    return Promise.resolve();
  }
};
`;

const migrationTestTemplate =
`{{=<% %>=}}const migration = require('../../migrations/{{migrationName}}');

describe('{{migrationName}}', () => {
  it.skip('should migrate up', function *() {
    // FIXME write a test to ensure the up function works as expected
  });

  it.skip('should migrate down', function *() {
    // FIXME write a test to ensure the down function works as expected
  });
});
`;

exports.create = name => {
  /* eslint no-console: 'off' */
  const now = new Date().toISOString();
  const migrationName = `${now}_${name}`;
  const root = path.resolve(__dirname, '../..');

  const migrationFile = mustache.render(migrationFileTemplate, { migrationName });
  const migrationTest = mustache.render(migrationTestTemplate, { migrationName });

  [`${root}/migrations/`, `${root}/test/migrations/`].forEach(p => {
    try {
      fs.mkdirSync(p);
    } catch (e) {
      if (e.code !== 'EEXIST') throw e;
    }
  });

  fs.writeFileSync(`${root}/migrations/${migrationName}.js`, migrationFile);
  console.log(`created migration at ./migrations/${migrationName}.js`);
  fs.writeFileSync(`${root}/test/migrations/${migrationName}_test.js`, migrationTest);
  console.log(`created migration test at ./test/migrations/${migrationName}_test.js`);
};
